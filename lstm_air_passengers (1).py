# -*- coding: utf-8 -*-
"""LSTM_air_passengers.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/16D-KkhmtocFB-hlwVAjHDPkN972T_nRw
"""

import pandas as pd
import numpy as np
from sklearn.preprocessing import MinMaxScaler
from sklearn.model_selection import train_test_split
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import LSTM, Dense
import matplotlib.pyplot as plt

# Load the dataset
df = pd.read_csv('/content/AirPassengers.csv')
df

df.columns = ['Month', 'Passengers']
df['Month'] = pd.to_datetime(df['Month'])
df.set_index('Month', inplace=True)
df

# Normalize the data
scaler = MinMaxScaler()
df_scaled = scaler.fit_transform(df[['Passengers']])

# Create sequences
def create_sequences(df, seq_length):
    X, y = [], []
    for i in range(len(df) - seq_length):
        X.append(df[i:i+seq_length])
        y.append(df[i+seq_length])
    return np.array(X), np.array(y)

sequence_length = 12
X, y = create_sequences(df_scaled, sequence_length)

# Train-test split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, shuffle=False)

# Build the model
model = Sequential([LSTM(50, activation='relu', input_shape=(X_train.shape[1], X_train.shape[2])),Dense(1)])

model.compile(optimizer='adam', loss='mse')

# Train the model
history = model.fit(X_train, y_train, epochs=100, batch_size=16, validation_data=(X_test, y_test), verbose=1)

# Make predictions
y_pred = model.predict(X_test)

# Inverse transform predictions and actual values
y_pred_inv = scaler.inverse_transform(y_pred)
y_test_inv = scaler.inverse_transform(y_test)

# Plot the results
plt.figure(figsize=(10, 6))
plt.plot(y_test_inv, label='Actual')
plt.plot(y_pred_inv, label='Predicted')
plt.title('Air Passengers Forecasting with LSTM')
plt.xlabel('Time Step')
plt.ylabel('Number of Passengers')
plt.legend()
plt.grid(True)
plt.show()